@{
    ViewData["Title"] = "Orders";
}
@model List<Product>

<!--This to post searchby sortBy and ShowOnlyBelowMinimumLevel variables to SearchProduct action-->
<form method="post" asp-controller="Order" asp-action="SearchProduct">
    <div class="row">
        <div class="col-md-3">
            <input class="form-control col-3" placeholder="Leave Blank to Show All." type="text" name="searchText" value="@ViewBag.SearchText">
        </div>
        <div class="col-md-3">
            <select name="sortBy" class="form-select">
                @foreach (string columnName in ViewBag.SortByOptions)
                {
                    if (ViewBag.SortBy == columnName)
                    {
                        <option selected value=@columnName>@columnName</option>
                    }
                    else
                    {
                        <option value=@columnName>@columnName</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-4">
            <input type="checkbox" value=@ViewBag.ShowOnlyBelowMinimumLevel checked=@ViewBag.ShowOnlyBelowMinimumLevel name="showOnlyBelowMinimumLevel" />
            <label >Show Only Products Below Minimum Level</label>
            <!--check box for ShowOnlyBelowMinimumLevel-->
            
        </div>
        <div class="col-md-2">
            <button class="btn btn-primary" type="submit">Search</button>
        </div>

    
    </div>
    <br />
    <a class="btn mb-3 btn-primary float-end" asp-action="Index">Back</a>
    
</form>

<!--Table that show list of products passed in List<Product>-->
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Product ID</th>
            <th>Name</th>
            <th>Minimum Level</th>
            <th>Current Quantity</th>
            <th>Quantity Not Received</th>
            <th>Maximum Level</th>
            <th>Recommended Order Quantity</th>
        </tr>
    </thead>
    <tbody>
        @for (int i=0;i <Model.Count();i++)
        {
            //for each product calculate recommended quantity to order which equals
            // Max Level - Current Quantity - Quantity Not Received
            int quantityNotReceived = ViewBag.QuantityNotReceivedCount[i];
            int recommendedQuantity = Model[i].MaximumLevel - @Model[i].Quantity - quantityNotReceived;

            // if recommended quantity was 0 or negative then RecommendedQuanitity is 0
            if (recommendedQuantity <= 0)
            {
                recommendedQuantity = 0;
            }

            <tr>
                <th>@Model[i].ProductID</th>
                <th>@Model[i].Name</th>
                <th>@Model[i].MinimumLevel</th>
                <th>@Model[i].Quantity</th>
                <th>@quantityNotReceived</th>
                <th>@Model[i].MaximumLevel</th>
                <th>@recommendedQuantity</th>
                <th>
                    <!--This is the form to post orderQuantity, productID
                        these will be used to create order record
                    -->
                    <form method="post" asp-controller="Order" asp-action="PlaceOrder">
                        <!-- min="0" oninput="validity.valid||(value='');"  This prevent numbers from being
                        negative-->
                        <div class="row">
                            <div class="col float-start">
                                <input class="w-75 input-group-text bg-white" type="number" name="orderQuantity" min="0" oninput="validity.valid||(value='');" value=@recommendedQuantity>
                            </div>
                            <div class="col-7 float-end">
                                <button class="btn btn-outline-primary" type="submit">Place Order</button>
                            </div>
                            <input type="number" hidden name="productID" value=@Model[i].ProductID>
                        </div>
                    </form>
                </th>

            </tr>

        }
    </tbody>

</table>


